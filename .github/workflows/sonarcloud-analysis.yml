name: SonarCloud Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Manually trigger workflow from GitHub UI

jobs:
  sonarcloud_scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download SonarScanner
      run: |
        curl -L -o sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.12008-linux.zip
        unzip sonar-scanner-cli.zip -d /opt/sonar-scanner
        echo "export PATH=\$PATH:/opt/sonar-scanner/sonar-scanner-4.8.0.12008-linux/bin" >> $GITHUB_ENV

    - name: Verify SonarScanner ZIP
      run: unzip -t sonar-scanner-cli.zip

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'  # Specify the Python version you are using

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -vvv pylint  # Install pylint with verbose output for debugging

    - name: Run pylint
      id: pylint
      continue-on-error: true  # Continue running even if pylint reports errors
      run: |
        set -e  # Ensure script fails on error other than pylint
        pylint **/*.py || true  # Run pylint and continue regardless of exit code

    - name: SonarCloud Scan
      if: success()  # Only run SonarCloud scan if pylint step succeeds
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Automatically provided by GitHub Actions
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner  # Run SonarCloud scanner

    - name: Check SonarCloud Analysis Status
      run: |
        # Add any post-analysis checks or commands here
        echo "SonarCloud analysis completed."

    - name: Finalize
      if: always()  # Always run this step regardless of previous steps' outcomes
      run: echo "Pipeline completed."
